user nobody nogroup;
worker_processes  2;

error_log  /dev/stdout;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
  accept_mutex on;
}

http {
  include       /etc/nginx/mime.types;

  default_type application/octet-stream;
  access_log /dev/stdout;

  # use the kernel sendfile
  # sendfile        on;  # this causes over-caching because modified timestamps lost in VM
  # prepend http headers before sendfile()
  tcp_nopush     on;

  keepalive_timeout  600;
  tcp_nodelay        on;

  gzip  on;
  gzip_vary on;
  gzip_min_length 500;

  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_types text/plain text/xml text/css
     text/javascript application/x-javascript
     application/javascript application/json;


  # Cache static files for a day
  map $uri $cacheable {
    ~\.(?:pn|sv)g$    1;
    ~\.js$            1;
    ~\.css$           1;
    ~\.ico$           1;
  }
  map $cacheable $cache_control {
      1        "public, max-age=86400";
      default  "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
  }
  map $cacheable $expire {
      1        1d;
      default  off;
  }

  server {

    root /var/www/inferno/public;

    listen 80;
    listen 443 default_server ssl;

    ssl_certificate /etc/ssl/certs/inferno/inferno.crt;
    ssl_certificate_key /etc/ssl/certs/inferno/inferno.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    client_max_body_size 4G;
    keepalive_timeout 600;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_redirect off;

    # Set expiration based on type of file.  See http context for settings.  We
    # tend to have problems with overcaching, so this is erring on the side of
    # less caching to ensure less stale data is served.
    add_header Cache-Control $cache_control;
    expires    $expire;

    #####################################
    # Redirections
    # Inferno platforms have explicit 'Test Kit Pages', which isn't
    # yet available default in inferno core, which is completely suite-oriented.

    # Redirections to use test kit landing pages instead of suite pages
    # This is primarily for when users are in-app and navigate backwards to start new testing sessions
    # Inferno platforms are  test kit oriented, not suite-oriented
    rewrite ^/suites/?$ /test-kits/ redirect;

    # suite landing page -> test-kit landing page mapping
    # be careful to not over-match and take over session urls, this is just for suite landing page
    rewrite ^/suites/ipa_v\d+/?$ /test-kits/international-patient-access/ redirect;
    rewrite ^/suites/us_core_v\d+(_ballot)?/?$ /test-kits/us-core/ redirect;

    # End redirections
    #####################################

    #####################################
    # Proxy to individual services
    location /suites {
      proxy_pass http://inferno_web:4567;
    }

    location /validator {
      proxy_pass http://fhir_validator_app:80;
    }

    location /test_kit_validator/version {
        proxy_pass http://validator_service:4567/version;
    }

    # If you enable the default refernce server, uncomment this
    # location /reference-server {
    #   proxy_pass http://inferno_reference_server:8080;
    # }

    # End Proxy to individual Services
    #####################################

  }
}
